{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "javascript/InsecureHash",
              "name": "InsecureHash",
              "shortDescription": {
                "text": "Use of Password Hash With Insufficient Computational Effort"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n## Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "InsecureHash",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/emgram769/livechan-js/commit/99ecea722f7fc204ce3293ff2b0e315d0e61ccad?diff=split#diff-fdbfe737b6f8eaccddd46f57a79b5532942e1667c38ca880c32d89723af39857L-1",
                    "lines": [
                      {
                        "line": "var hash_pass = crypto.createHash('sha1').update(password).digest('base64');\n",
                        "lineNumber": 88,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var hash_pass = crypto.createHash('sha512').update(config.admin_pw_salt, 'base64').update(password, 'utf8').digest('base64');\n",
                        "lineNumber": 88,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Synzvato/decentraleyes/commit/8855358381cff8156fe7a801d9201371034373a2?diff=split#diff-8e3adc8af301344e44c7efc3f4a24d375d02d285c617793db6d2eabe367b9d92L-1",
                    "lines": [
                      {
                        "line": "hash = crypto.createHash('md5');\n",
                        "lineNumber": 139,
                        "lineChange": "removed"
                      },
                      {
                        "line": "hash = crypto.createHash('sha512');\n",
                        "lineNumber": 139,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/openmrs/openmrs-contrib-id/commit/877c9a874b349a330b806414bfad82d03de39eb1?diff=split#diff-629444d01512e7f8fd688f67bf412d620053325ed416c34f940ffd52bb4420e2L-1",
                    "lines": [
                      {
                        "line": "hash = crypto.createHash('md5');\n",
                        "lineNumber": 109,
                        "lineChange": "removed"
                      },
                      {
                        "line": "hash = crypto.createHash('sha512');\n",
                        "lineNumber": 109,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 52,
                "cwe": [
                  "CWE-916"
                ]
              }
            },
            {
              "id": "javascript/UseCsurfForExpress",
              "name": "UseCsurfForExpress",
              "shortDescription": {
                "text": "Cross-Site Request Forgery (CSRF)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nCross-site request forgery is an attack in which a malicious third party takes advantage of a user's authenticated credentials (such as a browser cookie) to impersonate that trusted user and perform unauthorized actions. The web application server cannot tell the difference between legitimate and malicious requests. This type of attack generally begins by tricking the user with a social engineering attack, such as a link or popup that the user inadvertently clicks, causing an unauthorized request to be sent to the web server. Consequences vary: At a standard user level, attackers can change passwords, transfer funds, make purchases, or connect with contacts; from an administrator account, attackers can then make changes to or even take down the app itself.\n\n## Best practices for prevention\n* Use development frameworks that defend against CSRF, using a nonce, hash, or some other security device to the URL and/or to forms.\n* Implement secure, unique, hidden tokens that are checked by the server each time to validate state-change requests.\n* Never assume that authentication tokens and session identifiers mean a request is legitimate.\n* Understand and implement other safe-cookie techniques, such as double submit cookies.\n* Terminate user sessions when not in use, including automatic timeout.\n* Ensure rigorous coding practices and defenses against other commonly exploited CWEs, since cross-site scripting (XSS), for example, can be used to bypass defenses against CSRF.\n\n## References\n\n* [Express Documentation - Implement CSRF Protection](https://expressjs.com/en/resources/middleware/csurf.html)\n* [Node Security Checklist - CSRF](https://blog.risingstack.com/node-js-security-checklist/#csrf)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "UseCsurfForExpress",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/xiaoshan5733/cms/commit/cfa979899ffc5d7a1305571923ba6ae70548675b?diff=split#diff-e07d531ac040ce3f40e0ce632ac2a059d7cd60f20e61f78268ac3be015b3b28fL-1",
                    "lines": [
                      {
                        "line": "var app = express();\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "//连接数据库\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "mongoose.connect(config.mongodb.uri);\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "var db = mongoose.connection;\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "db.on('error', console.error.bind(console, 'connection error:'));\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "db.once('open', function callback () {\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "  console.log('连接mongodb成功');\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "//引入数据模型\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "util.walk(appPath + '/server/models', null, function(path) {\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "    require(path);\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "// view engine setup\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('views', path.join(__dirname, 'views'));\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('view engine', 'jade');\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "//定义全局字段\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.locals = {\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "    title: 'CMS',\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "    pretty: true,\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "    moment: moment,\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "    _: underscore,\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "    util: util,\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "    config: config,\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "    adminDir: config.admin.dir ? ('/' + config.admin.dir) : ''\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "};\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('config', config);\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(favicon());\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(logger('dev'));\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser.json());\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser.urlencoded());\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(cookieParser());\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(session({\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "    secret: 'ruoguan'/*,\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "    store: new RedisStore*/\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "}));\n",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "//app.use(csrf());\n",
                        "lineNumber": 58,
                        "lineChange": "removed"
                      },
                      {
                        "line": "app.use(csrf());\n",
                        "lineNumber": 61,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Detry322/redisred/commit/57aeed9563c1020ca70093310634000d795ae3b4?diff=split#diff-e07d531ac040ce3f40e0ce632ac2a059d7cd60f20e61f78268ac3be015b3b28fL-1",
                    "lines": [
                      {
                        "line": "var csrf = require('csurf');\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "//Initialize auth\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "authentication(passport, adminUsername, adminPassword);\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "//Initialize the app\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "var app = express();\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('views', './views');\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('view engine', 'jade');\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(favicon('./public/assets/favicon.png'));\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser.urlencoded({ extended: false }));\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(expressSession({ secret: sessionSecret, resave: true, saveUninitialized: true }));\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(passport.initialize());\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(passport.session());\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(csrf());\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/slidewiki/slidewiki-platform/commit/3e1fd3ff647826a1321f4272924da9bfbcc91383?diff=split#diff-a4c65ede64197e1a112899a68bf994485b889c4b143198bac4af53425b38406fL-1",
                    "lines": [
                      {
                        "line": "import cookieParser from 'cookie-parser';\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "import csrf from 'csurf';\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "import compression from 'compression';\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "import debugLib from 'debug';\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "import path from 'path';\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "import serialize from 'serialize-javascript';\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "import {navigateAction} from 'fluxible-router';\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "import debugLib from 'debug';\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "import React from 'react';\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "import ReactDOM from 'react-dom/server';\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "import app from './app';\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "import HTMLComponent from './components/DefaultHTMLLayout';\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "import { createElementWithContext } from 'fluxible-addons-react';\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "import favicon from 'serve-favicon';\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "const env = process.env.NODE_ENV;\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "const debug = debugLib('slidewiki-platform');\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "const server = express();\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.use(favicon(path.join(__dirname, '/favicon.ico')));\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.use('/public', express['static'](path.join(__dirname, '/build')));\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.use('/bower_components', express['static'](path.join(__dirname, '/bower_components')));\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.use('/custom_modules', express['static'](path.join(__dirname, '/custom_modules')));\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.use('/assets', express['static'](path.join(__dirname, '/assets')));\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.use(compression());\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.use(bodyParser.json());\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.use(csrf({cookie: true}));\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 66,
                "cwe": [
                  "CWE-352"
                ]
              }
            },
            {
              "id": "javascript/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "PT",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/NodeBB/NodeBB/commit/cacc732015c64bba55a6ab45510086febccfb1b2?diff=split#diff-300f765b568b38163933bfcd40c75fe91709a35e9a7522bca2f8c5fe4b19195aL-1",
                    "lines": [
                      {
                        "line": "\t\t\t\t\tuploadUserPicture(req.user.uid, req.files.userPhoto.name, req.files.userPhoto.path, res);\n",
                        "lineNumber": 101,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\t\t\tuploadUserPicture(req.user.uid, path.extname(req.files.userPhoto.name), req.files.userPhoto.path, res);\n",
                        "lineNumber": 101,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t\treturn;\n",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t}\n",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\n",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\tvar absolutePath = path.join(global.configuration['ROOT_DIRECTORY'], global.nconf.get('upload_path'), path.basename(oldpicture));\n",
                        "lineNumber": 105,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\n",
                        "lineNumber": 106,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\tfs.unlink(absolutePath, function(err) {\n",
                        "lineNumber": 107,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\tif(err) {\t\t\t\t\n",
                        "lineNumber": 108,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\t\tconsole.error('[%d] %s', Date.now(), + err);\n",
                        "lineNumber": 109,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\t}\n",
                        "lineNumber": 110,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\t\n",
                        "lineNumber": 111,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\tuploadUserPicture(req.user.uid, path.extname(req.files.userPhoto.name), req.files.userPhoto.path, res);\n",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\t\n",
                        "lineNumber": 113,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t});\n",
                        "lineNumber": 114,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t});\n",
                        "lineNumber": 115,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t});\n",
                        "lineNumber": 116,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\n",
                        "lineNumber": 117,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tfunction uploadUserPicture(uid, extension, tempPath, res) {\n",
                        "lineNumber": 118,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tif(!extension) {\n",
                        "lineNumber": 119,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\tres.send({\n",
                        "lineNumber": 120,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\terror: 'Error uploading file! Error : Invalid extension!'\n",
                        "lineNumber": 121,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t});\n",
                        "lineNumber": 122,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\treturn;\n",
                        "lineNumber": 123,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t}\n",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 125,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tvar filename = uid + '-profileimg' + extension;\n",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tvar uploadPath = path.join(global.configuration['ROOT_DIRECTORY'], global.nconf.get('upload_path'), filename);\n",
                        "lineNumber": 127,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\n",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t// @todo move to proper logging code - this should only be temporary\n",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tconsole.log('Info: Attempting upload to: '+ uploadPath);\n",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\n",
                        "lineNumber": 131,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tvar is = fs.createReadStream(tempPath);\n",
                        "lineNumber": 132,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tvar os = fs.createWriteStream(uploadPath);\n",
                        "lineNumber": 133,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/vilmosioo/magma/commit/b13ae22e9cc3646444f949279c92dfa54fa2e882?diff=split#diff-e727e4bdf3657fd1d798edcd6b099d6e092f8573cba266154583a746bba0f346L-1",
                    "lines": [
                      {
                        "line": "\tres.render(req.params.path || 'home');\n",
                        "lineNumber": 41,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tconsole.log(req.params.path);\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tvar template = routes['/' + req.params.path] || routes['/'];\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "\ttemplate = template.templateUrl;\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tres.render(path.basename(template, path.extname(template)), {\n",
                        "lineNumber": 46,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tconstants: {\n",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tROUTES: JSON.stringify(routes)\n",
                        "lineNumber": 48,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t}\n",
                        "lineNumber": 49,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t});\n",
                        "lineNumber": 50,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/cube-js/cube.js/commit/256be019d9393daff7d8776be2c39bceafc49ce2?diff=split#diff-e3f9f2305d99d77628204eb1da6a6fd4695a3b3235274d4e7d8a65a150f0941fL-1",
                    "lines": [
                      {
                        "line": "await Promise.all(files.map(file => fs.writeFile(path.join(file.fileName), file.content)));\n",
                        "lineNumber": 143,
                        "lineChange": "removed"
                      },
                      {
                        "line": "await Promise.all(\n",
                        "lineNumber": 144,
                        "lineChange": "added"
                      },
                      {
                        "line": "  files.map(file => path.join(...[dashboardAppPath].concat(file.fileName.split('/'))))\n",
                        "lineNumber": 145,
                        "lineChange": "added"
                      },
                      {
                        "line": ");\n",
                        "lineNumber": 146,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 42,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "javascript/WebCookieHttpOnlyDisabledByDefault",
              "name": "WebCookieHttpOnlyDisabledByDefault",
              "shortDescription": {
                "text": "Sensitive Cookie Without 'HttpOnly' Flag"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nThe `HttpOnly` flag is a simple parameter used when setting a user cookie to ensure that cookies with sensitive session data are visible only to the browser rather than to scripts. This helps prevent cross-site scripting attacks, in which an attacker gains access to sensitive session information and uses this information to trick legitimate web-based applications into disclosing confidential information or accepting illegitimate requests. When developers use the `HttpOnly` flag to set the cookie, they ensure that this sensitive session information is not readable or writable except by the browser (read) and server (write), respectively. While most modern browsers and versions now recognize the HttpOnly flag, some legacy and custom browsers still do not.\n\n## Best practices for prevention\n* Include the `HttpOnly` attribute in the response header when setting cookies on the client side. Be aware, however, that this crucial step provides only partial remediation.\n* Integrate client-side scripts to determine browser version; require browser compatibility or avoid transmitting sensitive data to browsers that do not support `HttpOnly`.\n* Understand and evaluate risks of third-party components or plugins, which may expose cookies.\n* Educate developers in a zero-trust approach, understanding the risks and best practices to prevent cross-site scripting, such as sanitizing all user input for code and special characters.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "WebCookieHttpOnlyDisabledByDefault",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/j-chimienti/pollofeed/commit/884a1660d22d815d7999abdc94415d5e139adbda?diff=split#diff-4ba6a99ab20c8d5a9081fcca5b7c8167d5b7b01232e31b98526cfa954f59fa21L-1",
                    "lines": [
                      {
                        "line": "res.cookie('adminToken', process.env.ADMIN_TOKEN_PW, {expires: 0})\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.cookie('adminToken', process.env.ADMIN_TOKEN_PW, {expires: 0, httpOnly: true})\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/datosgobar/consulta-publica/commit/58dccef77a9da20b7e1e5b8bc5e87a9735d552b4?diff=split#diff-30856c61d3fad4f492942080cc5c437483b7e5245cc2f4b713272ee05ee394d6L-1",
                    "lines": [
                      {
                        "line": "return res.cookie('token', token.token, { expires: new Date(token.expires) }).redirect('/');\n",
                        "lineNumber": 36,
                        "lineChange": "removed"
                      },
                      {
                        "line": "return res.cookie('token', token.token, { expires: new Date(token.expires), httpOnly: true }).redirect('/');\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/datosgobar/consulta-publica/commit/58dccef77a9da20b7e1e5b8bc5e87a9735d552b4?diff=split#diff-5bea8fd8c1c85140f6fec56256e5121ae7b0d5a3c4a34192f4343fa17e0ee7edL-1",
                    "lines": [
                      {
                        "line": "res.cookie('token', token.token, { domain: resolveDomain(), expires: new Date(token.expires) });\n",
                        "lineNumber": 47,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.cookie('token', token.token, { domain: resolveDomain(), expires: new Date(token.expires), httpOnly: true });\n",
                        "lineNumber": 47,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 5,
                "cwe": [
                  "CWE-1004"
                ]
              }
            },
            {
              "id": "javascript/HardcodedNonCryptoSecret",
              "name": "HardcodedNonCryptoSecret",
              "shortDescription": {
                "text": "Hardcoded Secret"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n## Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "HardcodedNonCryptoSecret",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/DanielMil/Authentication-Server/commit/310ce5500e9e751ee2fd9f3018bf772e9aae8364?diff=split#diff-dcdc3e0b3362edb8fec2a51d3fa51f8fb8af8f70247e06d9887fa934834c9122L-1",
                    "lines": [
                      {
                        "line": "// Set environment variables\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "const sessionSecret: any = process.env.SESSION_SECRET;\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "const dbConnection: any = process.env.MONGO_URI; \n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "// Mongo config\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "const DB_CONNECTION: any = process.env.MONGO_URI; \n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "mongoose.connect(DB_CONNECTION, { useNewUrlParser: true })\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": " .then(() => console.log(\"Succesfully connected to MongoDB.\"))\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": " .catch((err: mongoose.Error) => console.error(err));\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "const MongoStore = mongoStore(session); \n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "const db: any  = mongoose.connection;\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": " \n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Fix mongo deprecation warnings\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "mongoose.set('useNewUrlParser', true);\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "mongoose.set('useFindAndModify', false);\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "mongoose.set('useCreateIndex', true);\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Configure express session\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(cookieParser());\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(session({\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "    secret: \"secret\",\n",
                        "lineNumber": 30,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    secret: sessionSecret,\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/virena-app/virena/commit/8058527e8ef71bfa81f0cb0fb35eb80d00e08fdb?diff=split#diff-186488e26aa960d29fec244ac086f15e024c5a84df47eeba233d9b8d2525de2dL-1",
                    "lines": [
                      {
                        "line": "client_id: '8fcf3e5c2d3d5dd78188',\n",
                        "lineNumber": 36,
                        "lineChange": "removed"
                      },
                      {
                        "line": "client_secret: '0e102c56021e1aa28005b469b3c83ef7cb7e5b0e'\n",
                        "lineNumber": 37,
                        "lineChange": "removed"
                      },
                      {
                        "line": "client_id: process.env.GITINIT,\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      },
                      {
                        "line": "client_secret: process.env.GITSEE\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/nemtech/nem2-library-js/commit/dd101718759035849eeb9d4a388656acdb5bf6d9?diff=split#diff-59ccc41578f07869060f7aea9ceca193a407696cce3de9f7219f98187f65c5b7L-1",
                    "lines": [
                      {
                        "line": "const hash = sha3_512.create();\n",
                        "lineNumber": 29,
                        "lineChange": "removed"
                      },
                      {
                        "line": "hash.update('secret');\n",
                        "lineNumber": 30,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const hash = new Ripemd160().update(Buffer.from('Test Hash 160')).digest('Hex');\t\t\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "const secretLockTransaction = {\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tdeadline: deadline(),\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tmosaicId: [3646934825, 3576016193],\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tmosaicAmount: uint64.fromUint(10000000),\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tduration: uint64.fromUint(100),\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "\thashAlgorithm: 0,\n",
                        "lineNumber": 36,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tsecret: '225fe6d12b73a7d51f2992ce82951dbf8c173fa4',\n",
                        "lineNumber": 37,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\thashAlgorithm: HashAlgorithm.RIPEMD_160,\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tsecret: hash,\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 68,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "javascript/DisablePoweredBy",
              "name": "DisablePoweredBy",
              "shortDescription": {
                "text": "Information Exposure"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nSensitive data includes: personally identifiable information (PII) of employees, customers, users, or other third parties; financial information; code; intellectual property; or protected network information such as passwords. Exposure of sensitive information to an unauthorized actor occurs when any party who does not require this information for business purposes can remove this information from the secure network.\nConsequences of exposure can include holding it for ransom payment, identity theft, or access to other internal network resources-along with financial loss due to regulatory fines, court settlements, or cost to restore compromised systems. As most attackers aim to extract sensitive information, this CWE only describes exploits that take advantage of vulnerabilities related to how data is handled: the management, storage, transfer, or removal of sensitive information.\n\n## Best practices for prevention\n- Encrypt data at all times, whether in transit or at rest.\n- When transporting data, always use a secure protocol such as TLS.\n- Before collecting PII or financial information, consider whether there is a true business need for this information; similarly, before storing the data, ensure that there is an ongoing business need.\n- Classify all incoming data according to privacy and security guidelines to improve awareness of sensitive data.\n- Ensure that caching is disabled for all transactions involving sensitive information.\n- Store passwords with secure, salted hashing functions.\n- Apply a network-wide least-privilege policy so sensitive data is provided only to users with business need to know.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "DisablePoweredBy",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/nunux-keeper/keeper-core-api/commit/3717e4c4d2f732ceb7d3ee521782c979ca2a141c?diff=split#diff-c72a907ac323cd2f334ed0e2bd07d15ab62581c4753660c8a0d1c681b30be4b6L-1",
                    "lines": [
                      {
                        "line": "const app = express();\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Set properties\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('port', process.env.APP_PORT || 3000);\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('realm', process.env.APP_REALM || 'http://localhost:' + app.get('port'));\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('info', {\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "  name: appInfo.name,\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "  description: appInfo.description,\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "  version: appInfo.version,\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "  realm: app.get('realm'),\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "  env: env\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Disable some properties\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.disable('x-powered-by');\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/GoogleChromeLabs/gulliver/commit/e3e61eb3aa66bf9c801dc79318d585ef76b2df6c?diff=split#diff-e07d531ac040ce3f40e0ce632ac2a059d7cd60f20e61f78268ac3be015b3b28fL-1",
                    "lines": [
                      {
                        "line": "const helmet = require('helmet');\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "const helpers = require('./views/helpers');\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "const app = express();\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "const bodyParser = require('body-parser');\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "const serveStatic = require('serve-static');\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(helmet());\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/adeperio/base/commit/bee34a30b82cf3d8c0812b92907a5a15cdf0ac93?diff=split#diff-f85e295b34c9835cd9f4b308ba1deea8fc648cb706ae7d4e198cf3585051dee1L-1",
                    "lines": [
                      {
                        "line": "// import helmet from 'helmet';\n",
                        "lineNumber": 12,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// import express_enforces_ssl from 'express-enforces-ssl';\n",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "import helmet from 'helmet';\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "import express_enforces_ssl from 'express-enforces-ssl';\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "import signInRoutes from './routes/sign-in-routes.js';\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "import signOutRoutes from './routes/sign-out-routes.js';\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "import signUpRoutes from './routes/sign-up-routes.js';\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "import userRoutes from './routes/user-routes.js';\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "import passport from './middleware/passport.js';\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "var server = express();\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "// ======== *** VIEWS AND TEMPLATES ***\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "//Set port\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.set('port', (process.env.PORT || 5000));\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.set('views', path.join(__dirname, 'templates'));\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.set('view engine', 'jade');\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "//Setup location to static assets\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.use(express.static(path.join(__dirname)));\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "// ======== *** SECURITY MIDDLEWARE ***\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "//setup helmet js\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "// server.use(helmet());\n",
                        "lineNumber": 38,
                        "lineChange": "removed"
                      },
                      {
                        "line": "server.use(helmet());\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 416,
                "cwe": [
                  "CWE-200"
                ]
              }
            },
            {
              "id": "javascript/WebCookieSecureDisabledByDefault",
              "name": "WebCookieSecureDisabledByDefault",
              "shortDescription": {
                "text": "Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nIn a session hijacking attack, if a cookie containing sensitive data is set without the `secure` attribute, an attacker might be able to intercept that cookie. Once the attacker has this information, they can potentially impersonate a user, accessing confidential data and performing actions that they would not normally be authorized to do. Attackers often gain access to this sensitive cookie data when it is transmitted insecurely in plain text over a standard HTTP session, rather than being encrypted and sent over an HTTPS session. This type of attack is highly preventable by following best practices when setting sensitive session cookies.\n\n## Best practices for prevention\n* Set the `secure` attribute in the response header when setting cookies on the client side, and use a test tool to verify that secure cookie transmission is in place.\n* Always use HTTPS for all login pages and never redirect from HTTP to HTTPS, which leaves secure session data open to interception.\n* Follow other best practices when it comes to session cookies, such as setting the HttpOnly flag and maintaining highly time-limited sessions.\n* Consider implementing browser checks and providing secure data only within a browser that supports tight cookie security.\n* Generate session IDs in a way that is not easily predictable, invalidate sessions upon logout, and never reuse session IDs.\n* Educate developers to use built-in secure session-management functionality within the development environment instead of taking a DIY approach.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "WebCookieSecureDisabledByDefault",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/xCss/bing/commit/49599704a5418f4c94ec046fdea597b2e86abad7?diff=split#diff-e07d531ac040ce3f40e0ce632ac2a059d7cd60f20e61f78268ac3be015b3b28fL-1",
                    "lines": [
                      {
                        "line": "cookie: {\r\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "    secure: true,\r\n",
                        "lineNumber": 46,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/OpenUserJS/OpenUserJS.org/commit/e9b369ad2dbe93849b85639e1466b12ee6263544?diff=split#diff-e07d531ac040ce3f40e0ce632ac2a059d7cd60f20e61f78268ac3be015b3b28fL-1",
                    "lines": [
                      {
                        "line": "cookie: {\n",
                        "lineNumber": 319,
                        "lineChange": "none"
                      },
                      {
                        "line": "  maxAge: 5 * 60 * 1000 // minutes in ms NOTE: Expanded after successful auth\n",
                        "lineNumber": 320,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  maxAge: 5 * 60 * 1000, // minutes in ms NOTE: Expanded after successful auth\n",
                        "lineNumber": 320,
                        "lineChange": "added"
                      },
                      {
                        "line": "  secure: (isPro && secured ? true : false)\n",
                        "lineNumber": 321,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/feinwarusoftware/awesomobot/commit/d17a3ad13a2af300d4d3bf4e749338f04fabf27b?diff=split#diff-fc0fe0dc00ac98d54cb1ee462b826ea1ef890fa58683f06c71972fd1c1744355L-1",
                    "lines": [
                      {
                        "line": "res.cookie(\"session\", jwt.sign({ id: new_session_doc._id }, config.jwt_secret), config.rawrxd, { maxAge: 604800, expire: new Date() + 604800, secure: true });\n",
                        "lineNumber": 223,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.cookie(\"session\", jwt.sign({ id: new_session_doc._id }, config.jwt_secret), { maxAge: 60000, httpOnly: true, secure: true, signed: true });\n",
                        "lineNumber": 223,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 17,
                "cwe": [
                  "CWE-614"
                ]
              }
            },
            {
              "id": "javascript/HttpToHttps",
              "name": "HttpToHttps",
              "shortDescription": {
                "text": "Cleartext Transmission of Sensitive Information"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nThis weakness occurs when software transmits sensitive information, such as passwords or credit card numbers, in unencrypted form. This information may then be intercepted by threat actors using sniffer tools or interception techniques such as man-in-the-middle (MITM) attacks (often involving social engineering). Attackers can then use information gleaned to perform a variety of actions, depending on the information type. Possible actions include gaining unauthorized access, impersonating a user, moving laterally within the organization's network, or retrieving and potentially modifying files. This weakness is almost completely avoidable through intelligent architecture and design.\n\n## Best practices for prevention\n* Build web applications around a security mindset and the awareness that sniffers may be present at any time.\n* Ensure that all sensitive data transmission uses reliable encryption.\n* Implement security measures so that sensitive results are never returned in plain text.\n* Implement multiple-factor authentication methods to validate remote instances.\n* Use SSL not only at logon but throughout communications.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "HttpToHttps",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/medic/couch2pg/commit/062eaa0f53d2cd2327232a695c60bf4c9fd589f6?diff=split#diff-e727e4bdf3657fd1d798edcd6b099d6e092f8573cba266154583a746bba0f346L-1",
                    "lines": [
                      {
                        "line": "var httplib = require('http');\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var httplib = require('https');\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/dondi/GRNsight/commit/01e7d39d55ea9c18348a48aac5954183d825e834?diff=split#diff-65890f102baa526da3cc5d65e0528ea728fa9fa63659a7f2e1d523686240359cL-1",
                    "lines": [
                      {
                        "line": "var https = require(\"http\");\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var https = require(\"https\");\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/watilde/npmbrew/commit/968a0cd04e732ede4552e60e86762ce77f7f0a5c?diff=split#diff-94469ba7812da76fe341041375403897426443f146321489331bb46bb45faf5bL-1",
                    "lines": [
                      {
                        "line": "var http = require(\"http\")\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var http = require(\"https\")\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 4,
                "cwe": [
                  "CWE-319"
                ]
              }
            },
            {
              "id": "javascript/reDOS",
              "name": "reDOS",
              "shortDescription": {
                "text": "Regular Expression Denial of Service (ReDoS)"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet's take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn't match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "reDOS",
                  "Security",
                  "SourceServer",
                  "SourceRequestUrl",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/ivanoff/Amazon-S3-gate-API/commit/ce05418c1c47a6a26ca10c56c3f48f1fbbe61a0d?diff=split#diff-aa3508d55ee1dbde335732d75d71240b4e7c7a3a4fffa1afa6f7897a483a3521L-1",
                    "lines": [
                      {
                        "line": "search : function( req, res ){\n",
                        "lineNumber": 53,
                        "lineChange": "removed"
                      },
                      {
                        "line": "search : function( req, query, res ){\n",
                        "lineNumber": 53,
                        "lineChange": "added"
                      },
                      {
                        "line": "    req.db.collection(this.modelName)\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "        .find( { userId : req.currentUser._id, name : new RegExp( req.params.name, 'i' ) } ).toArray( res );\n",
                        "lineNumber": 55,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        .find( query ).toArray( res );\n",
                        "lineNumber": 55,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/SayakMukhopadhyay/elitebgs/commit/e5879c0be815589c372a1a8871dbb44e0eb1659c?diff=split#diff-05ec808013e5fe3aa6194e705e156a1719d8e163568ec76540f221ad708e2c44L-1",
                    "lines": [
                      {
                        "line": "$regex: new RegExp(`^${req.query.beginsWith.toLowerCase()}`)\n",
                        "lineNumber": 114,
                        "lineChange": "removed"
                      },
                      {
                        "line": "$regex: new RegExp(`^${_.escapeRegExp(req.query.beginsWith.toLowerCase())}`)\n",
                        "lineNumber": 115,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/SayakMukhopadhyay/elitebgs/commit/e5879c0be815589c372a1a8871dbb44e0eb1659c?diff=split#diff-4d8a93d3cc127b845f405f2bb1f89f720c9e4cc8ba64341510e1caab51c95a85L-1",
                    "lines": [
                      {
                        "line": "$regex: new RegExp(`^${req.query.beginsWith.toLowerCase()}`)\n",
                        "lineNumber": 94,
                        "lineChange": "removed"
                      },
                      {
                        "line": "$regex: new RegExp(`^${_.escapeRegExp(req.query.beginsWith.toLowerCase())}`)\n",
                        "lineNumber": 94,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 61,
                "cwe": [
                  "CWE-400"
                ]
              }
            },
            {
              "id": "javascript/HardcodedSecret",
              "name": "HardcodedSecret",
              "shortDescription": {
                "text": "Hardcoded Secret"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n## Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "HardcodedSecret",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/ridoy/Monk/commit/d702fedf42ebc197c9131a09918affb6adb396ad?diff=split#diff-d20e0c91f722f4a7eb0a8a7dfa4d7799aa292685d66aaeb37f3122ff3594fefdL-1",
                    "lines": [
                      {
                        "line": "}, 'SECRET');\n",
                        "lineNumber": 41,
                        "lineChange": "removed"
                      },
                      {
                        "line": "}, process.env.SECRET);\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/xiaoshan5733/cms/commit/da6178e57541766a84406b42d526a18b72704180?diff=split#diff-a21b912911c328c339d5f819be1e95f0973d6fdf93c1e8f29ff9bb2fbe9933e4L-1",
                    "lines": [
                      {
                        "line": "data = jwt.verify(token, 'cms')\n",
                        "lineNumber": 54,
                        "lineChange": "removed"
                      },
                      {
                        "line": "data = jwt.verify(token, config.jwt.secret)\n",
                        "lineNumber": 54,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/sidewalklabs/commonspace/commit/32f2996ef0daad6eadab6ac8dacef8cd68048704?diff=split#diff-8a8ae07582c9d433ec8c2e5c4310ff8901e604f4965c5b90a49117ad46c47595L-1",
                    "lines": [
                      {
                        "line": "const token = jwt.sign(user, 'secret');\n",
                        "lineNumber": 50,
                        "lineChange": "removed"
                      },
                      {
                        "line": "return res.json({user, token});\n",
                        "lineNumber": 51,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const token = jwt.sign(user, process.env.jwt_secret);\n",
                        "lineNumber": 53,
                        "lineChange": "added"
                      },
                      {
                        "line": "return res.json({token});\n",
                        "lineNumber": 54,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 60,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "javascript/NoRateLimitingForExpensiveWebOperation",
              "name": "NoRateLimitingForExpensiveWebOperation",
              "shortDescription": {
                "text": "Allocation of Resources Without Limits or Throttling"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nWithout unlimited resources, software operating in the real world is inherently limited in the resources it may consume; similarly, servers are limited by the number of simultaneous sessions they can handle. Therefore, it is important for developers to design software that considers these real-world physical (or virtual) limitations and limits user sessions accordingly, both in terms of the number of user sessions and in the quantity of resources each user may demand. Software with this weakness does not include such limitations and as a result, individual user sessions may consume too many resources, leading to unintended software behavior including, potentially, denial of service. This can be compared to a single restaurant customer emptying out the entire buffet, leaving no food for other customers--or an entire busload mobbing the buffet all at once, with a similar effect. This may happen inadvertently or as a result of an attack by a malicious user.\n\n## Best practices for prevention\n* Test extensively to obtain baseline values indicating how the software performs in the real world under various conditions (normal and peak); use these values to determine reasonable software limits.\n* Set clear limits for all flexible parameters such as maximum allocable memory, number of processes within a given timeframe, file descriptors, requests per client, number of records per request, etc. This is particularly true for any parameters within user control.\n* Release all resources when no longer in use, including incorporating timeouts for inactive users, processes, and resources.\n* Familiarize Dev, Ops, and IT teams with best practices for recognizing and preventing DoS attacks and out-of-control resource allocation to prevent catastrophic failures.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "NoRateLimitingForExpensiveWebOperation",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/ministryofjustice/apvs-external-web/commit/0c9c9b33869909092d7cb442f10e76a08e4acb60?diff=split#diff-322f0482bd28fc40f84fcb0aaf208fef7fb63082d462cf02d11f46e59c531c24L-1",
                    "lines": [
                      {
                        "line": "// rate limiting\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (config.RATE_LIMITING_ENABLED === 'true') {\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "  app.enable('trust proxy')\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "  var limiter = new RateLimit({\n",
                        "lineNumber": 46,
                        "lineChange": "added"
                      },
                      {
                        "line": "    windowMs: parseInt(config.RATE_LIMITING_WINDOW_MILLISECONDS),\n",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "    max: parseInt(config.RATE_LIMITING_REQUEST_LIMIT),\n",
                        "lineNumber": 48,
                        "lineChange": "added"
                      },
                      {
                        "line": "    delayMs: 0, // disable delaying - full speed until the max limit is reached\n",
                        "lineNumber": 49,
                        "lineChange": "added"
                      },
                      {
                        "line": "    skip: function (req) {\n",
                        "lineNumber": 50,
                        "lineChange": "added"
                      },
                      {
                        "line": "      return req.url.startsWith('/public') // skip public assets\n",
                        "lineNumber": 51,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 52,
                        "lineChange": "added"
                      },
                      {
                        "line": "  })\n",
                        "lineNumber": 53,
                        "lineChange": "added"
                      },
                      {
                        "line": "  //  apply to all requests\n",
                        "lineNumber": 54,
                        "lineChange": "added"
                      },
                      {
                        "line": "  app.use(limiter)\n",
                        "lineNumber": 55,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 56,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 57,
                        "lineChange": "added"
                      },
                      {
                        "line": "var packageJson = require('../package.json')\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "var developmentMode = app.get('env') === 'development'\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "var releaseVersion = packageJson.version\n",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "var serviceName = 'Get help with prison visits'\n",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('view engine', 'html')\n",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('views', path.join(__dirname, 'views'))\n",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "nunjucks(app, {\n",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "  watch: developmentMode,\n",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "  noCache: developmentMode\n",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "})\n",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use('/public', express.static(path.join(__dirname, 'public')))\n",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use('/public', express.static(path.join(__dirname, 'govuk_modules', 'govuk_template')))\n",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use('/public', express.static(path.join(__dirname, 'govuk_modules', 'govuk_frontend_toolkit')))\n",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(favicon(path.join(__dirname, 'govuk_modules', 'govuk_template', 'images', 'favicon.ico')))\n",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 75,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Basic auth\n",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (config.BASIC_AUTH_ENABLED === 'true') {\n",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "  app.use(function (req, res, next) {\n",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "    var credentials = auth(req)\n",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 80,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (req.url === '' || req.url === '/' || req.url === '/status') {\n",
                        "lineNumber": 81,
                        "lineChange": "none"
                      },
                      {
                        "line": "      next() // must leave root url free for Azure gateway\n",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "    } else {\n",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "      if (!credentials ||\n",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "        credentials.name !== config.BASIC_AUTH_USERNAME ||\n",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "        credentials.pass !== config.BASIC_AUTH_PASSWORD) {\n",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "        res.statusCode = 401\n",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "        res.setHeader('WWW-Authenticate', 'Basic realm=\"APVS External Web\"')\n",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "        res.end('Access denied')\n",
                        "lineNumber": 89,
                        "lineChange": "none"
                      },
                      {
                        "line": "      } else {\n",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "        next()\n",
                        "lineNumber": 91,
                        "lineChange": "none"
                      },
                      {
                        "line": "      }\n",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "  })\n",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser.json())\n",
                        "lineNumber": 97,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser.urlencoded({ extended: false }))\n",
                        "lineNumber": 98,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(expressSanitized())\n",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 100,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Send assetPath to all views.\n",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(function (req, res, next) {\n",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.locals.asset_path = '/public/'\n",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "  next()\n",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "})\n",
                        "lineNumber": 105,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 106,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Add variables that are available in all views.\n",
                        "lineNumber": 107,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(function (req, res, next) {\n",
                        "lineNumber": 108,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.locals.serviceName = serviceName\n",
                        "lineNumber": 109,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.locals.releaseVersion = 'v' + releaseVersion\n",
                        "lineNumber": 110,
                        "lineChange": "none"
                      },
                      {
                        "line": "  next()\n",
                        "lineNumber": 111,
                        "lineChange": "none"
                      },
                      {
                        "line": "})\n",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 113,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Set locale for translations.\n",
                        "lineNumber": 114,
                        "lineChange": "none"
                      },
                      {
                        "line": "i18n.configure({\n",
                        "lineNumber": 115,
                        "lineChange": "none"
                      },
                      {
                        "line": "  locales: ['en', 'cy'],\n",
                        "lineNumber": 116,
                        "lineChange": "none"
                      },
                      {
                        "line": "  directory: path.join(__dirname, '/locales'),\n",
                        "lineNumber": 117,
                        "lineChange": "none"
                      },
                      {
                        "line": "  updateFiles: config.I18N_UPDATEFILES || true\n",
                        "lineNumber": 118,
                        "lineChange": "none"
                      },
                      {
                        "line": "})\n",
                        "lineNumber": 119,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(i18n.init)\n",
                        "lineNumber": 120,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 121,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Log each HTML request and it's response.\n",
                        "lineNumber": 122,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(function (req, res, next) {\n",
                        "lineNumber": 123,
                        "lineChange": "none"
                      },
                      {
                        "line": "  // Log response started.\n",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "  log.info({ request: req }, 'Route Started.')\n",
                        "lineNumber": 125,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "  // Log response finished.\n",
                        "lineNumber": 127,
                        "lineChange": "none"
                      },
                      {
                        "line": "  onFinished(res, function () {\n",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "    log.info({ response: res }, 'Route Complete.')\n",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "  })\n",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "  next()\n",
                        "lineNumber": 131,
                        "lineChange": "none"
                      },
                      {
                        "line": "})\n",
                        "lineNumber": 132,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 133,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Use cookie parser middleware (required for csurf)\n",
                        "lineNumber": 134,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(cookieParser(config.EXT_APPLICATION_SECRET, { httpOnly: true, secure: config.EXT_SECURE_COOKIE === 'true' }))\n",
                        "lineNumber": 135,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 136,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Check for valid CSRF tokens on state-changing methods.\n",
                        "lineNumber": 137,
                        "lineChange": "none"
                      },
                      {
                        "line": "var csrfProtection = csurf({ cookie: { httpOnly: true, secure: config.EXT_SECURE_COOKIE === 'true' } })\n",
                        "lineNumber": 138,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 139,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(function (req, res, next) {\n",
                        "lineNumber": 140,
                        "lineChange": "none"
                      },
                      {
                        "line": "  csrfExcludeRoutes.forEach(function (route) {\n",
                        "lineNumber": 141,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (req.originalUrl.includes(route) && req.method === 'POST') {\n",
                        "lineNumber": 142,
                        "lineChange": "none"
                      },
                      {
                        "line": "      next()\n",
                        "lineNumber": 143,
                        "lineChange": "none"
                      },
                      {
                        "line": "    } else {\n",
                        "lineNumber": 144,
                        "lineChange": "none"
                      },
                      {
                        "line": "      csrfProtection(req, res, next)\n",
                        "lineNumber": 145,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 146,
                        "lineChange": "none"
                      },
                      {
                        "line": "  })\n",
                        "lineNumber": 147,
                        "lineChange": "none"
                      },
                      {
                        "line": "})\n",
                        "lineNumber": 148,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 149,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Generate CSRF tokens to be sent in POST requests\n",
                        "lineNumber": 150,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(function (req, res, next) {\n",
                        "lineNumber": 151,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (req.hasOwnProperty('csrfToken')) {\n",
                        "lineNumber": 152,
                        "lineChange": "none"
                      },
                      {
                        "line": "    res.locals.csrfToken = req.csrfToken()\n",
                        "lineNumber": 153,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }\n",
                        "lineNumber": 154,
                        "lineChange": "none"
                      },
                      {
                        "line": "  next()\n",
                        "lineNumber": 155,
                        "lineChange": "none"
                      },
                      {
                        "line": "})\n",
                        "lineNumber": 156,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 157,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Build the router to route all HTTP requests and pass to the routes file for route configuration.\n",
                        "lineNumber": 158,
                        "lineChange": "none"
                      },
                      {
                        "line": "var router = express.Router()\n",
                        "lineNumber": 159,
                        "lineChange": "none"
                      },
                      {
                        "line": "routes(router)\n",
                        "lineNumber": 160,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use('/', router)\n",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 162,
                        "lineChange": "none"
                      },
                      {
                        "line": "// catch 404 and forward to error handler.\n",
                        "lineNumber": 163,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(function (req, res, next) {\n",
                        "lineNumber": 164,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var err = new Error('Not Found')\n",
                        "lineNumber": 165,
                        "lineChange": "none"
                      },
                      {
                        "line": "  err.status = 404\n",
                        "lineNumber": 166,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.status(404)\n",
                        "lineNumber": 167,
                        "lineChange": "none"
                      },
                      {
                        "line": "  next(err)\n",
                        "lineNumber": 168,
                        "lineChange": "none"
                      },
                      {
                        "line": "})\n",
                        "lineNumber": 169,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 170,
                        "lineChange": "none"
                      },
                      {
                        "line": "// catch CSRF token errors\n",
                        "lineNumber": 171,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(function (err, req, res, next) {\n",
                        "lineNumber": 172,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/SOSML/SOSML/commit/7e27f8b78d458f8ca8a4313730af19de6dc948a2?diff=split#diff-4e0d36557976efd053a8a93638c538d9c6530933aceca263867cd67b5ed9e5baL-1",
                    "lines": [
                      {
                        "line": "var callDockerLimiter = new RateLimit({\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "    windowMs: 10*60*1000, // 1 hour window\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "    delayAfter: 10, // begin slowing down responses after the first 10 requests\n",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "    delayMs: 100, // slow down subsequent responses by 100 milliseconds per request\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "    max: 50, // start blocking after 50 requests\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "    message: \"Too many requests made from this IP, please try again in a few minutes\"\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "function evalSMLCode(payload, response) {\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "    let dockerrunner = cmd.get(\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'docker run --cpus=1 --memory=128m --rm -i --read-only derjesko/mosmlfallback',\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "        function (err, data, stderr) {\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "            var last_line = data.split(/\\r?\\n/).pop();\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "            var error_code = parseInt(last_line.substring(2));\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "            error_text = '';\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "            if (error_code > 0) {\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "                if (error_code == 124) {\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    error_text = 'SML hit the time limit of 3 seconds.';\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "                } else {\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    data = data.replace(last_line, 'SML exited with ' + error_code);\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "                }\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "            }\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "            data = data.replace(last_line, error_text);\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "            response.set('Content-Type', 'text/plain');\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "            response.end(data);\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "    );\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "    dockerrunner.stdin.write(payload);\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "    dockerrunner.stdin.destroy();\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "function readFile(name, callback) {\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "    fs.readFile(name, 'utf8', function (err, data) {\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if (err) {\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return console.log(err);\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "        callback(data);\n",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "    });\n",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "function outputFile(name, response) {\n",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "    readFile(name, function (data) {\n",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response.set('Content-Type', 'text/plain');\n",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response.end(data);\n",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "    });\n",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "function listDir(name, response) {\n",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "    fs.readdir(name, function (err, items) {\n",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response.set('Content-Type', 'text/json');\n",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response.end(JSON.stringify({codes: items}));\n",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "    });\n",
                        "lineNumber": 75,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.post('/api/fallback/',\n",
                        "lineNumber": 69,
                        "lineChange": "removed"
                      },
                      {
                        "line": "server.post('/api/fallback/', callDockerLimiter,\n",
                        "lineNumber": 78,
                        "lineChange": "added"
                      },
                      {
                        "line": "    function (request, response) {\n",
                        "lineNumber": 79,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/SOSML/SOSML/commit/7e27f8b78d458f8ca8a4313730af19de6dc948a2?diff=split#diff-4e0d36557976efd053a8a93638c538d9c6530933aceca263867cd67b5ed9e5baL-1",
                    "lines": [
                      {
                        "line": "var callDockerLimiter = new RateLimit({\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "    windowMs: 10*60*1000, // 1 hour window\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "    delayAfter: 10, // begin slowing down responses after the first 10 requests\n",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "    delayMs: 100, // slow down subsequent responses by 100 milliseconds per request\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "    max: 50, // start blocking after 50 requests\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "    message: \"Too many requests made from this IP, please try again in a few minutes\"\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "function evalSMLCode(payload, response) {\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "    let dockerrunner = cmd.get(\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'docker run --cpus=1 --memory=128m --rm -i --read-only derjesko/mosmlfallback',\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "        function (err, data, stderr) {\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "            var last_line = data.split(/\\r?\\n/).pop();\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "            var error_code = parseInt(last_line.substring(2));\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "            error_text = '';\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "            if (error_code > 0) {\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "                if (error_code == 124) {\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    error_text = 'SML hit the time limit of 3 seconds.';\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "                } else {\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    data = data.replace(last_line, 'SML exited with ' + error_code);\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "                }\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "            }\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "            data = data.replace(last_line, error_text);\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "            response.set('Content-Type', 'text/plain');\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "            response.end(data);\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "    );\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "    dockerrunner.stdin.write(payload);\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "    dockerrunner.stdin.destroy();\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "function readFile(name, callback) {\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "    fs.readFile(name, 'utf8', function (err, data) {\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if (err) {\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return console.log(err);\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "        callback(data);\n",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "    });\n",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "function outputFile(name, response) {\n",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "    readFile(name, function (data) {\n",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response.set('Content-Type', 'text/plain');\n",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response.end(data);\n",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "    });\n",
                        "lineNumber": 68,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "function listDir(name, response) {\n",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "    fs.readdir(name, function (err, items) {\n",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response.set('Content-Type', 'text/json');\n",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "        response.end(JSON.stringify({codes: items}));\n",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "    });\n",
                        "lineNumber": 75,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.post('/api/fallback/',\n",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "    function (request, response) {\n",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "        var payload = request.body.code;\n",
                        "lineNumber": 80,
                        "lineChange": "none"
                      },
                      {
                        "line": "        evalSMLCode(payload, response);\n",
                        "lineNumber": 81,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": ");\n",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 84,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.post('/api/validate/',\n",
                        "lineNumber": 76,
                        "lineChange": "removed"
                      },
                      {
                        "line": "server.post('/api/validate/', callDockerLimiter,\n",
                        "lineNumber": 85,
                        "lineChange": "added"
                      },
                      {
                        "line": "    function (request, response) {\n",
                        "lineNumber": 86,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 27,
                "cwe": [
                  "CWE-770"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "javascript/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "SHA1 hash (used in sha1) is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "SHA1 hash (used in {0}) is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[sha1](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/cookie-signature/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 42,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f7da4073eadaa02f6d6966b32189b8401fe139013e846304e2b40ac3bfdd7b62",
            "1": "ca516799.9f15f38e.673eb66b.59162423.656aea68.5fce695c.83265159.418ed6ee.ca516799.9f15f38e.673eb66b.59162423.656aea68.5fce695c.83265159.418ed6ee"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/cookie-signature/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 416,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "SHA1 hash (used in sha1) is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "SHA1 hash (used in {0}) is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[sha1](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/cookie-signature/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 42,
                  "startColumn": 23,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f7da4073eadaa02f6d6966b32189b8401fe139013e846304e2b40ac3bfdd7b62",
            "1": "ca516799.9f15f38e.673eb66b.59162423.656aea68.5fce695c.83265159.418ed6ee.ca516799.9f15f38e.673eb66b.59162423.656aea68.5fce695c.83265159.418ed6ee"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/cookie-signature/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 416,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "sha1 hash (used in crypto.createHash) is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} hash (used in {1}) is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[sha1](0)",
              "[crypto.createHash](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/cookie-signature/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 50,
                  "endLine": 50,
                  "startColumn": 10,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7444da49cdc80c6352a5f1e4ca285fbc739971f19a7e4623ff2bc52b922944bf",
            "1": "37bc1bfe.9f15f38e.191eaf2b.d9da6552.ef9f7d82.82ca542b.b7c406fd.71520ffe.ae77ea27.9f15f38e.191eaf2b.d9da6552.f7b6c27c.5fce695c.04f551bd.71520ffe"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/cookie-signature/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 28,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/cookie-signature/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 416,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/InsecureHash",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "sha1 hash (used in crypto.createHash) is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} hash (used in {1}) is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[sha1](0)",
              "[crypto.createHash](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/etag/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 46,
                  "endLine": 47,
                  "startColumn": 14,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "32c58a0f12c41bd1e1f944cdaea268711630e9615db16f741917b434d7c7bc43",
            "1": "37bc1bfe.4773f344.191eaf2b.d9da6552.ef9f7d82.0204cbe8.7a8c7288.71520ffe.ae77ea27.4773f344.191eaf2b.d9da6552.f7b6c27c.0204cbe8.04f551bd.71520ffe"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/etag/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 17,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/etag/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 47,
                            "startColumn": 14,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 366,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/UseCsurfForExpress",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "CSRF protection is disabled for your Express app. This allows the attackers to execute requests on a user's behalf.",
            "markdown": "CSRF protection is disabled for your {0}. This allows the attackers to execute requests on a user's behalf.",
            "arguments": [
              "[Express app](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 11,
                  "startColumn": 13,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "67fb36f4e530f8b6e29459d26df2e11c6365218c532e7ab911eb1865cf86f702",
            "1": "ae77ea27.4773f344.8b18f948.d7919eeb.a1fb1152.5fce695c.ea4b1c47.89d75565.ae77ea27.93dc32e3.44eded10.c559ebce.f30fb760.5fce695c.7b86ed34.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 13,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 554,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into fs.readFileSync, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[fs.readFileSync](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/dotenv/config.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4,
                  "startColumn": 25,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9952a6e9e63007bf768a5a826aa5c79f4e756af8f4896407e6163fc02b0b8426",
            "1": "bc12a096.93dc32e3.a5cb6912.e052b9a9.00cbbb95.9bf3d58c.cd61fc56.83183368.6e283998.277c621c.7be03776.99f4e1a5.00cbbb95.9bf3d58c.cd61fc56.83183368"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/dotenv/config.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 44,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/dotenv/config.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 44,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/dotenv/config.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5,
                            "endLine": 5,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/dotenv/config.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5,
                            "endLine": 5,
                            "startColumn": 5,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/dotenv/lib/main.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 18,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/dotenv/lib/main.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 7,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/dotenv/lib/main.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 9,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/dotenv/lib/main.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 20,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/dotenv/lib/main.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/dotenv/lib/main.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 26,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 504,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/WebCookieHttpOnlyDisabledByDefault",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Cookie misses the HttpOnly attribute (it is false by default). Set it to true to protect the cookie from possible malicious code on client side.",
            "markdown": "{0} misses the HttpOnly attribute (it is false by default). Set it to true to protect the cookie from possible malicious code on client side.",
            "arguments": [
              "[Cookie](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/express-openid-connect/lib/transientHandler.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "startColumn": 11,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "163efae021211dc27497b5582a1893e994184b45d881829a069b5b71e2ffced7",
            "1": "7cb99f84.277c621c.7be03776.0755de8f.601e4ccc.0bd934de.37f98344.f5919d50.7cb99f84.664e3b30.7be03776.c559ebce.be8f2316.0bd934de.37f98344.f5919d50"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/express-openid-connect/lib/transientHandler.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 366,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/WebCookieHttpOnlyDisabledByDefault",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Cookie misses the HttpOnly attribute (it is false by default). Set it to true to protect the cookie from possible malicious code on client side.",
            "markdown": "{0} misses the HttpOnly attribute (it is false by default). Set it to true to protect the cookie from possible malicious code on client side.",
            "arguments": [
              "[Cookie](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/express-openid-connect/lib/appSession.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 142,
                  "endLine": 142,
                  "startColumn": 15,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "41dcd4462f643f800cc6e700026e67fcebf8a5abc9dbf501c433ddaa36c6968a",
            "1": "06f50278.4773f344.607187b5.c8688b2b.8a448b44.557c6712.cd61fc56.f5919d50.06f50278.277c621c.782a8fc0.c8688b2b.be8f2316.557c6712.83265159.29e8dc3a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/express-openid-connect/lib/appSession.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 416,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/WebCookieHttpOnlyDisabledByDefault",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Cookie misses the HttpOnly attribute (it is false by default). Set it to true to protect the cookie from possible malicious code on client side.",
            "markdown": "{0} misses the HttpOnly attribute (it is false by default). Set it to true to protect the cookie from possible malicious code on client side.",
            "arguments": [
              "[Cookie](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/express-openid-connect/lib/appSession.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 149,
                  "endLine": 149,
                  "startColumn": 13,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8a0cb06c8723f2f925601d0e9bce7603c89484e47c9526eae58555239668acd8",
            "1": "06f50278.277c621c.cd4a6755.c8688b2b.5ef953d3.557c6712.cd61fc56.f5919d50.06f50278.277c621c.782a8fc0.c8688b2b.be8f2316.557c6712.83265159.29e8dc3a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/express-openid-connect/lib/appSession.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 416,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/WebCookieHttpOnlyDisabledByDefault",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Cookie misses the HttpOnly attribute (it is false by default). Set it to true to protect the cookie from possible malicious code on client side.",
            "markdown": "{0} misses the HttpOnly attribute (it is false by default). Set it to true to protect the cookie from possible malicious code on client side.",
            "arguments": [
              "[Cookie](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/express-openid-connect/lib/appSession.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 266,
                  "endLine": 266,
                  "startColumn": 13,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c45d5c86d941317c8e2b33a5c0301d24f5576a4e131f68da1f64b5d7470c558e",
            "1": "7e0cfb8c.277c621c.cd4a6755.d7919eeb.79a7d027.8020cfdf.cd61fc56.f5919d50.bbb475da.664e3b30.782a8fc0.c559ebce.be8f2316.8020cfdf.83265159.29e8dc3a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/express-openid-connect/lib/appSession.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 266,
                            "endLine": 266,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 416,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/jose/lib/errors.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 15,
                  "endLine": 15,
                  "startColumn": 3,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5f513563c87cc4f928a5cd9267a0f03e8a83397668d1bf962042cbd306b6fe09",
            "1": "12567ef6.3f481afb.9cf4eeb5.d7919eeb.79a7d027.f7edcf51.fa37c766.45033b47.b497c970.0d37c82a.b3b04a25.95350a57.10b70c59.5fce695c.af35e8a8.45033b47"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/jose/lib/errors.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 20,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/jose/lib/errors.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 3,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 754,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/DisablePoweredBy",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "Disable X-Powered-By header for your Express app (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.",
            "markdown": "Disable X-Powered-By header for your {0} (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.",
            "arguments": [
              "[Express app](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 11,
                  "startColumn": 13,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2f229389cce9af700f14cc4056256a7288af2b78b36889cfdb9506ed1efef14c",
            "1": "ae77ea27.4773f344.8b18f948.d7919eeb.a1fb1152.5fce695c.ea4b1c47.89d75565.ae77ea27.93dc32e3.44eded10.c559ebce.f30fb760.5fce695c.7b86ed34.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 13,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 554,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/WebCookieSecureDisabledByDefault",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Cookie misses the Secure attribute (it is false by default). Set it to true to protect the cookie from man-in-the-middle attacks.",
            "markdown": "{0} misses the Secure attribute (it is false by default). Set it to true to protect the cookie from man-in-the-middle attacks.",
            "arguments": [
              "[Cookie](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/express-openid-connect/lib/appSession.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 142,
                  "endLine": 142,
                  "startColumn": 15,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "de8c629d8ad2fff0d418747e9404bdf9cae58aa0ab6c6a88831724a44c5080a1",
            "1": "06f50278.4773f344.607187b5.c8688b2b.8a448b44.557c6712.cd61fc56.f5919d50.06f50278.277c621c.782a8fc0.c8688b2b.be8f2316.557c6712.83265159.29e8dc3a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/express-openid-connect/lib/appSession.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 412,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/WebCookieSecureDisabledByDefault",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Cookie misses the Secure attribute (it is false by default). Set it to true to protect the cookie from man-in-the-middle attacks.",
            "markdown": "{0} misses the Secure attribute (it is false by default). Set it to true to protect the cookie from man-in-the-middle attacks.",
            "arguments": [
              "[Cookie](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/express-openid-connect/lib/appSession.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 149,
                  "endLine": 149,
                  "startColumn": 13,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "feddaee1b15b1ab6120e5b7d14e910187856688c49393bf1d289d86337253eda",
            "1": "06f50278.277c621c.cd4a6755.c8688b2b.5ef953d3.557c6712.cd61fc56.f5919d50.06f50278.277c621c.782a8fc0.c8688b2b.be8f2316.557c6712.83265159.29e8dc3a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/express-openid-connect/lib/appSession.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 412,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/WebCookieSecureDisabledByDefault",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Cookie misses the Secure attribute (it is false by default). Set it to true to protect the cookie from man-in-the-middle attacks.",
            "markdown": "{0} misses the Secure attribute (it is false by default). Set it to true to protect the cookie from man-in-the-middle attacks.",
            "arguments": [
              "[Cookie](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/express-openid-connect/lib/appSession.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 266,
                  "endLine": 266,
                  "startColumn": 13,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6ed7043ff586c5b68ea8948aec4127dfbe99a9efdb53bac3b7361cbf56b8cc1a",
            "1": "7e0cfb8c.277c621c.cd4a6755.d7919eeb.79a7d027.8020cfdf.cd61fc56.f5919d50.bbb475da.664e3b30.782a8fc0.c559ebce.be8f2316.8020cfdf.83265159.29e8dc3a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/express-openid-connect/lib/appSession.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 266,
                            "endLine": 266,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 412,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HttpToHttps",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "http.request uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.",
            "markdown": "{0} uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.",
            "arguments": [
              "[http.request](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/http2-wrapper/source/auto.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 146,
                  "endLine": 146,
                  "startColumn": 9,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1724b5b6873bf3da62e0de64241695c5cd6ea5add1e7c021ce56382f5ce56b3e",
            "1": "aac70831.cce3b696.254e94bc.a517c54b.2fce9a75.98c7c24d.83265159.bd899c1f.40c5fd92.e21642e6.9339e9e9.0755de8f.601e4ccc.98c7c24d.83265159.39ec0f4b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/http2-wrapper/source/auto.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 9,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 512,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HttpToHttps",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "http.createServer uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.",
            "markdown": "{0} uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.",
            "arguments": [
              "[http.createServer](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 56,
                  "endLine": 56,
                  "startColumn": 1,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "75db5f6c7fd6baf21e962f15e6f6135951beb609550b9846ab760282719dea37",
            "1": "d22593cc.4773f344.607187b5.9a6c48e6.2fce9a75.6f0d36d4.a4e722aa.b1b5c7cb.d22593cc.4773f344.d685e3e1.d7919eeb.8b312d3d.5fce695c.ea1fda40.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 1,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 562,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HttpToHttps",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "http.createServer uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.",
            "markdown": "{0} uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.",
            "arguments": [
              "[http.createServer](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/express/lib/application.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 634,
                  "endLine": 634,
                  "startColumn": 16,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c40e833e42241c975adbf0993bdd0282ea6083bb4e6fdae4dc4b9bd5b3704cb3",
            "1": "aac70831.883ce888.b8d9fa19.d7919eeb.2fce9a75.6f0d36d4.cd61fc56.63ad1ad6.0423bc55.fba75ec3.607187b5.d7919eeb.968cbaba.5fce695c.3bc5ce02.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/express/lib/application.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 634,
                            "endLine": 634,
                            "startColumn": 16,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 512,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/reDOS",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized user input from the request URL flows into match, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "markdown": "Unsanitized user input from {0} {1} into {2}, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[match](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/express/lib/router/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 585,
                  "endLine": 585,
                  "startColumn": 18,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0666da924f49bfc815c46ab868b06c452de7b21ca5f4b63e72d26987c8cb853d",
            "1": "d7b3d065.4773f344.126beb45.ed202363.ef9f7d82.37110c89.83265159.d5de5421.84a53940.277c621c.89af0168.1a7f4325.3f452f8c.8431f2ca.c08dd55c.53752168"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/express/lib/router/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 7,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/express/lib/router/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 7,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/express/lib/router/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 3,
                            "endColumn": 6
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/express/lib/router/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 213,
                            "endLine": 213,
                            "startColumn": 28,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/express/lib/router/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 537,
                            "endLine": 537,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/express/lib/router/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 539,
                            "endLine": 539,
                            "startColumn": 21,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/express/lib/router/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 539,
                            "endLine": 539,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/express/lib/router/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 213,
                            "endLine": 213,
                            "startColumn": 9,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/express/lib/router/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 215,
                            "endLine": 215,
                            "startColumn": 9,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/express/lib/router/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 585,
                            "endLine": 585,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/express/lib/router/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 585,
                            "endLine": 585,
                            "startColumn": 18,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 754,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HardcodedSecret",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Hardcoded value is used as a cipher initialization value (in crypto.createCipheriv). Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.",
            "markdown": "Hardcoded {0} is used as a {1}. Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.",
            "arguments": [
              "[value](0)",
              "[cipher initialization value (in crypto.createCipheriv)](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/jose/lib/jwa/aes_kw.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 14,
                  "endLine": 14,
                  "startColumn": 56,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bd81c1474f6b4e919fa4402ee0efa4a9165ab2b22d76a071488e9a2e5d49c1f4",
            "1": "91011b6e.4bbe55b4.0935e6be.2aae4467.ef9f7d82.d6d43a48.2721e7ff.5ae0b161.91011b6e.c641b410.0935e6be.0737161c.760c5742.0c17bcdd.83265159.675e912b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/jose/lib/jwa/aes_kw.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 56,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/jose/lib/jwa/aes_kw.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 18,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 816,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HardcodedSecret",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Hardcoded value is used as a cipher initialization value (in crypto.createDecipheriv). Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.",
            "markdown": "Hardcoded {0} is used as a {1}. Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.",
            "arguments": [
              "[value](0)",
              "[cipher initialization value (in crypto.createDecipheriv)](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/jose/lib/jwa/aes_kw.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 22,
                  "startColumn": 58,
                  "endColumn": 59
                }
              }
            }
          ],
          "fingerprints": {
            "0": "51121997246b9728fa3f8671cacad7800521bda586560f7be1a730f84982241c",
            "1": "91011b6e.4773f344.0935e6be.2aae4467.ef9f7d82.d6d43a48.2721e7ff.5dc530bc.91011b6e.4773f344.0935e6be.0737161c.760c5742.0c17bcdd.83265159.5dc530bc"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/jose/lib/jwa/aes_kw.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 58,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/jose/lib/jwa/aes_kw.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 18,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 816,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HardcodedSecret",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Hardcoded value is used as a salt (in crypto.hkdfSync). Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.",
            "markdown": "Hardcoded {0} is used as a {1}. Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.",
            "arguments": [
              "[value](0)",
              "[salt (in crypto.hkdfSync)](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/express-openid-connect/lib/crypto.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 29,
                  "endLine": 29,
                  "startColumn": 22,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1d14759f109e0bd5de147e9d8f7da4ea1919d897d977628612689eda3c375e52",
            "1": "ab43d878.4773f344.0935e6be.c8688b2b.ef9f7d82.8020cfdf.c1695816.16c17486.fc3065be.4773f344.0935e6be.c8688b2b.0c8566ca.8020cfdf.83265159.71520ffe"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/express-openid-connect/lib/crypto.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 22,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/express-openid-connect/lib/crypto.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 7,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 816,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/HardcodedSecret",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Hardcoded value is used as a salt (in crypto.hkdfSync). Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.",
            "markdown": "Hardcoded {0} is used as a {1}. Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.",
            "arguments": [
              "[value](0)",
              "[salt (in crypto.hkdfSync)](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/express-openid-connect/lib/crypto.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 39,
                  "endLine": 39,
                  "startColumn": 22,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "54d50f9b08d5f374c596d0dbf9381c5570d8f8821a5bb14354c0b71fecccb06f",
            "1": "ab43d878.4773f344.0935e6be.c8688b2b.ef9f7d82.8020cfdf.c1695816.16c17486.fc3065be.4773f344.0935e6be.c8688b2b.8d22f254.b6ac83fd.83265159.64f2b671"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/express-openid-connect/lib/crypto.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 22,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node_modules/express-openid-connect/lib/crypto.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 7,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 816,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 48,
                  "endLine": 54,
                  "startColumn": 9,
                  "endColumn": 2
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e7fc244bafb7bb8c962dd7f8c94e4ca39b050a58132f545086e918661e2bab64",
            "1": "ae77ea27.4773f344.44eded10.c559ebce.fd1fa73f.5fce695c.83265159.d5de5421.ae77ea27.4773f344.eff3b32f.c559ebce.fd1fa73f.5fce695c.83265159.d5de5421"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 54,
                            "startColumn": 9,
                            "endColumn": 2
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 562,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 9,
                  "startColumn": 17,
                  "endColumn": 2
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f726ecbaa00ed62371c7949990494335a5cbc61ab45c63dd8923291888c0bb5d",
            "1": "92e26ef2.4773f344.607187b5.c559ebce.fd1fa73f.5fce695c.83265159.89d75565.92e26ef2.4773f344.607187b5.c559ebce.fd1fa73f.5fce695c.83265159.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4,
                            "endLine": 9,
                            "startColumn": 17,
                            "endColumn": 2
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5,
                            "endLine": 5,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 562,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 16,
                  "startColumn": 40,
                  "endColumn": 2
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5d43e76a0384503c836b8935a2d5dbb30d1ddbaf181d62578eea9593fa62ed4b",
            "1": "ede8aabc.4773f344.47ebd169.c559ebce.fd1fa73f.5fce695c.83265159.89d75565.ede8aabc.4773f344.47ebd169.c559ebce.fd1fa73f.5fce695c.83265159.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 16,
                            "startColumn": 40,
                            "endColumn": 2
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 562,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "EJS",
            "files": 5,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "JavaScript",
            "files": 700,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "TypeScript",
            "files": 121,
            "type": "SUPPORTED"
          }
        ]
      }
    }
  ]
}
